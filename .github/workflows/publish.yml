name: Publish

on:
  push:
    tags:
      - '*'

jobs:
  check:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Dependencies
        run: npm ci

      - name: Build
        run: npm run build

  docker:
    runs-on: 'ubuntu-latest'
    needs: check

    steps:
      - uses: actions/checkout@v4
      - name: Build and Publish Docker Image
        run: |
          tag=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')
          if [[ $tag == v[0-9]* ]]; then
            tag=$(echo $tag | sed 's/v//')
          fi
          docker build -t ${{ vars.DOCKER_HUB_USERNAME }}/ssl-autoupdater:$tag .
          docker login -u ${{ vars.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push ${{ vars.DOCKER_HUB_USERNAME }}/ssl-autoupdater:$tag

  npm:
    runs-on: 'ubuntu-latest'
    needs: check

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org/'

      - name: Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish
        run: |
          PACKAGE_NAME=$(npm pkg get name)
          PACKAGE_NAME=${PACKAGE_NAME//\"/}
          VERSION=$(npm pkg get version)
          VERSION=${VERSION//\"/}
          if npm view ${PACKAGE_NAME}@${VERSION} > /dev/null 2>&1; then
            echo "Version ${VERSION} of ${PACKAGE_NAME} already exists, skipping publish"
            exit 0
          else
            npm publish --access public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}